Index: ukui-settings-daemon-1.2.1/plugins/xrandr/usd-xrandr-manager.c
===================================================================
--- ukui-settings-daemon-1.2.1.orig/plugins/xrandr/usd-xrandr-manager.c	2020-07-31 14:16:59.000000000 +0800
+++ ukui-settings-daemon-1.2.1/plugins/xrandr/usd-xrandr-manager.c	2020-08-06 16:01:38.279100127 +0800
@@ -41,8 +41,10 @@
 #include <gio/gio.h>
 #include <dbus/dbus-glib.h>
 
-#include <X11/Xlib.h>
+/* add for touchscreen rotation */
 #include <X11/extensions/XInput2.h>
+#include<X11/extensions/XI2.h>
+#include<X11/extensions/XI.h>
 
 #define MATE_DESKTOP_USE_UNSTABLE_API
 #include <libmate-desktop/mate-rr-config.h>
@@ -1711,18 +1713,84 @@
         }
 }
 
+/*查找触摸屏设备ID*/
+static gboolean
+find_touchscreen_device(Display* display, XIDeviceInfo *dev)
+{
+        int i, j;
+        if (dev->use != XISlavePointer)
+            return FALSE;
+        if (!dev->enabled)
+        {
+            printf("\tThis device is disabled\n");
+            return FALSE;
+        }
+
+        for (i = 0; i < dev->num_classes; i++)
+        {
+            if (dev->classes[i]->type == XITouchClass)
+            {
+                XITouchClassInfo *t = (XITouchClassInfo*)dev->classes[i];
+
+                if (t->mode == XIDirectTouch)
+                return TRUE;
+            }
+        }
+        return FALSE;
+}
+
 /*检测到旋转，更改触摸屏鼠标光标位置*/
 void set_touchscreen_cursor(void *date)
 {
-        Display *xdisplay = XOpenDisplay(NULL);
-        Atom property_atom;
-        property_atom = XInternAtom (xdisplay, "Coordinate Transformation Matrix", True);
-        if (!property_atom)
+        int ts_device_id = 0;
+        Atom prop_float, prop_matrix;
+
+        union {
+            unsigned char *c;
+            float *f;
+        } data;
+
+        int format_return;
+        Atom type_return;
+
+        unsigned long nitems;
+        unsigned long bytes_after;
+
+        int rc;
+        int i, ndevices;
+        XIDeviceInfo *info;
+        Display *dpy = GDK_DISPLAY_XDISPLAY(gdk_display_get_default());
+        info = XIQueryDevice(dpy, XIAllDevices, &ndevices);
+
+        for (i = 0; i < ndevices; i++)
+        {
+            if (find_touchscreen_device(dpy, &info[i]))
+            ts_device_id = info[i].deviceid;
+        }
+
+        if (ts_device_id == 0)
+            return;
+
+        prop_float = XInternAtom(dpy, "FLOAT", False);
+        prop_matrix = XInternAtom(dpy, "Coordinate Transformation Matrix", False);
+
+        if (!prop_float)
             return;
-        Atom type = XInternAtom (xdisplay, "FLOAT", False);
-        XIChangeProperty (xdisplay, XITouchClass, property_atom, type,
-                          32, XIPropModeReplace, date, 9);
-        XCloseDisplay(xdisplay);
+
+        if (!prop_matrix)
+            return;
+        rc = XIGetProperty (dpy, XITouchClass, prop_matrix, 0, 9, False,
+                            prop_float, &type_return, &format_return, &nitems, &bytes_after, &data.c);
+
+        if (rc != Success || prop_float != type_return || format_return != 32 ||
+            nitems != 9 || bytes_after != 0)
+            return;
+
+        memcpy(data.f, matrix, 9*sizeof(float));
+        XIChangeProperty (dpy, ts_device_id, prop_matrix, prop_float,
+                          format_return, PropModeReplace, data.c, nitems);
+
+        XIFreeDeviceInfo(info);
 }
 
 /* 设置触摸屏触点的角度 */
